{"version":3,"sources":["metal/stores/AppStore.coffee"],"names":[],"mappings":"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","file":"metal/stores/AppStore.js","sourceRoot":"/source/","sourcesContent":["\n{ EventEmitter } = require \"events\"\nImmutable = require \"seamless-immutable\"\nassign = require \"object-assign\"\n_ = require \"underscore\"\n\nAppDispatcher = require \"../dispatcher/AppDispatcher\"\nAppConstants = require \"../constants/AppConstants\"\nAppActions = require \"../actions/AppActions\"\ndefer = require \"../defer\"\n\napp = require \"app\"\n\nconfig = require \"../config\"\napi = require \"../api\"\ndb = require \"../db\"\n\nCHANGE_EVENT = \"change\"\n\nstate = Immutable {\n  page: \"login\"\n\n  library: {\n    me: null\n    game: null\n    games: []\n    panel: null\n    collections: {}\n    installs: {}\n  }\n\n  login: {\n    loading: false\n  }\n}\n\ncurrent_user = null\n\nmerge_state = (obj) ->\n  state = state.merge obj, deep: true\n\nAppStore = assign {}, EventEmitter.prototype, {\n  listeners: {}\n\n  emit_change: ->\n    @emit CHANGE_EVENT\n\n  add_change_listener: (name, callback) ->\n    @listeners[name] = callback\n    @on CHANGE_EVENT, callback\n    console.log \"Added listener '#{name}', #{@listenerCount CHANGE_EVENT} left\"\n\n  remove_change_listener: (name) ->\n    callback = @listeners[name]\n    unless callback\n      console.log \"Can't remove non-listener '#{name}'\"\n      return\n    delete @listeners[name]\n    @removeListener CHANGE_EVENT, callback\n    console.log \"Removed listener '#{name}', #{@listenerCount CHANGE_EVENT} left\"\n\n  get_state: ->\n    state\n\n  get_state_json: ->\n    JSON.stringify state\n\n  get_current_user: ->\n    current_user\n\n}\n\nfetch_games = ->\n  user = current_user\n  { panel } = state.library\n\n  fetch = switch panel\n\n    when \"dashboard\"\n      show_own_games = ->\n        own_id = state.library.me.id\n        db.find(_table: 'games', user_id: own_id).then(Immutable).then((games) ->\n          return unless state.library.panel is \"dashboard\"\n          merge_state { library: { games } }\n          AppStore.emit_change()\n        )\n\n      show_own_games()\n\n      user.my_games().then((res) ->\n        res.games.map (game) ->\n          game.user = state.library.me\n          game\n      ).then(db.save_games).then -> show_own_games()\n\n    when \"owned\"\n      show_owned_games = ->\n        db.find(_table: 'download_keys').then((keys) ->\n          _.pluck keys, 'game_id'\n        ).then((game_ids) ->\n          db.find(_table: 'games', id: { $in: game_ids })\n        ).then(Immutable).then((games) ->\n          return unless state.library.panel is \"owned\"\n          merge_state { library: { games } }\n          AppStore.emit_change()\n        )\n\n      show_owned_games()\n\n      for promise in [\n        user.my_owned_keys()  .then (res) => res.owned_keys\n        user.my_claimed_keys().then (res) => res.claimed_keys\n      ]\n        promise.then(db.save_download_keys).then(->\n          show_owned_games()\n        )\n\n    else\n      [type, id] = panel.split \"/\"\n      switch type\n        when \"collections\"\n          collection = state.library.collections[id]\n          db.find(_table: 'games', id: {$in: collection.game_ids}).then((games) =>\n            return unless state.library.panel is \"collections/#{id}\"\n            merge_state { library: { games } }\n            AppStore.emit_change()\n          )\n        when \"installs\"\n          db.findOne(_table: 'installs', _id: id).then((install) =>\n            db.findOne(_table: 'games', id: install.game_id)\n          ).then((game) =>\n            return unless state.library.panel is \"installs/#{id}\"\n            console.log \"game for this install is #{JSON.stringify game}\"\n            merge_state { library: { games: [game] } }\n            AppStore.emit_change()\n          )\n        else\n          merge_state { library: { games: [] } }\n          AppStore.emit_change()\n\nfocus_window = ->\n  require(\"app\").main_window?.show()\n\nfocus_panel = (panel) ->\n  merge_state {\n    page: \"library\"\n    library: {\n      panel\n      games: []\n    }\n  }\n  AppStore.emit_change()\n\n  fetch_games()\n\nswitch_page = (page) ->\n  merge_state { page }\n  AppStore.emit_change()\n\nlogin_key = (key) ->\n  merge_state { login: { loading: true } }\n  AppStore.emit_change()\n\n  api.client.login_key(key).then((res) =>\n    merge_state { library: { me: res.user } }\n    defer -> AppActions.login_done key\n  ).catch((errors) =>\n    merge_state { login: { errors } }\n  ).finally =>\n    merge_state { login: { loading: false } }\n    AppStore.emit_change()\n\nlogin_with_password = (username, password) ->\n  merge_state { login: { loading: true } }\n  AppStore.emit_change()\n\n  api.client.login_with_password(username, password).then((res) =>\n    defer ->\n      AppActions.login_done res.key.key\n      current_user.me().then((res) =>\n        merge_state { library: { me: res.user } }\n      )\n  ).catch((errors) =>\n    merge_state { login: { errors } }\n  ).finally =>\n    merge_state { login: { loading: false } }\n    AppStore.emit_change()\n\nlogin_done = (key) ->\n  config.set \"api_key\", key\n  current_user = new api.User(api.client, key)\n  focus_panel \"owned\"\n  AppStore.emit_change()\n\n  defer ->\n    show_collections = ->\n      db.find(_table: 'collections').then((collections) =>\n        _.indexBy collections, \"id\"\n      ).then((collections) =>\n        merge_state { library: { collections } }\n        AppStore.emit_change()\n      )\n\n    show_collections()\n\n    current_user.my_collections().then((res) ->\n      res.collections\n    ).then(db.save_collections).then -> show_collections()\n\nAppDispatcher.register (action) ->\n  # console.log action.action_type\n\n  switch action.action_type\n\n    when AppConstants.SWITCH_PAGE\n      switch_page action.page\n      AppStore.emit_change()\n\n    when AppConstants.LIBRARY_VIEW_GAME\n      merge_state { library: { game: action.game } }\n      AppStore.emit_change()\n\n    when AppConstants.LIBRARY_CLOSE_GAME\n      library = state.library.without(\"game\")\n      state = state.merge { library }\n      AppStore.emit_change()\n\n    when AppConstants.LIBRARY_FOCUS_PANEL\n      focus_window()\n      focus_panel action.panel\n\n    when AppConstants.FOCUS_WINDOW\n      focus_window()\n\n    when AppConstants.LOGIN_WITH_PASSWORD\n      login_with_password action.username, action.password\n\n    when AppConstants.LOGIN_DONE\n      login_done action.key\n\n    when AppConstants.LOGOUT\n      config.clear \"api_key\"\n      state = state.merge library: state.library.without(\"me\")\n      merge_state { page: \"login\" }\n      AppStore.emit_change()\n\n    when AppConstants.BOOT\n      if key = config.get \"api_key\"\n        login_key(key)\n\n    when AppConstants.QUIT\n      require(\"app\").quit()\n\n    when AppConstants.INSTALL_PROGRESS\n      installs = { \"#{action.opts.id}\": action.opts }\n      merge_state { library: { installs } }\n      AppStore.emit_change()\n\nmodule.exports = AppStore\n\n"]}