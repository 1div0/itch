{"version":3,"sources":["metal/menu.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA;;EAAA,IAAA,GAAO,OAAA,CAAQ,MAAR;;EAEP,QAAA,GAAW,OAAA,CAAQ,mBAAR;;EACX,UAAA,GAAa,OAAA,CAAQ,sBAAR;;EACb,aAAA,GAAgB,OAAA,CAAQ,4BAAR;;EAEhB,YAAA,GAAe,SAAA;AACb,QAAA;IAAA,GAAA,GAAO,OAAO,CAAC,QAAR,KAAoB;IAE3B,KAAA,GAAQ;MACN,IAAA,EAAM;QACJ,KAAA,EAAO,MADH;QAEJ,OAAA,EAAS;UACP;YACE,KAAA,EAAO,cADT;YAEE,WAAA,EAAgB,GAAH,GAAY,WAAZ,GAA6B,QAF5C;YAGE,KAAA,EAAO,SAAA;AACL,kBAAA;qEAA0B,CAAE,IAA5B,CAAA;YADK,CAHT;WADO,EAOP;YACE,KAAA,EAAO,MADT;YAEE,WAAA,EAAgB,GAAH,GAAY,WAAZ,GAA6B,QAF5C;YAGE,KAAA,EAAO,SAAA;qBACL,UAAU,CAAC,IAAX,CAAA;YADK,CAHT;WAPO;SAFL;OADA;MAmBN,OAAA,EAAS;QACP,KAAA,EAAO,SADA;QAEP,OAAA,EAAS;UACP;YACE,KAAA,EAAO,SADT;YAEE,KAAA,EAAO,SAAA;qBACL,UAAU,CAAC,MAAX,CAAA;YADK,CAFT;WADO;SAFF;OAnBH;;IA+BR,QAAA,GAAW,CAAC,KAAK,CAAC,IAAP;IAEX,IAAG,QAAQ,CAAC,gBAAT,CAAA,CAAH;MACE,QAAQ,CAAC,IAAT,CAAc,KAAK,CAAC,OAApB,EADF;;WAKA,IAAI,CAAC,kBAAL,CAAwB,IAAI,CAAC,iBAAL,CAAuB,QAAvB,CAAxB;EAzCa;;EA2Cf,OAAA,GAAU,SAAA;WACR,aAAa,CAAC,QAAd,CAAuB,SAAC,MAAD;AACrB,cAAO,MAAM,CAAC,WAAd;AAAA,aAGO,MAHP;AAAA,aAGe,YAHf;AAAA,aAG6B,QAH7B;iBAII,UAAA,CAAW,CAAC,SAAA;mBAAG,YAAA,CAAA;UAAH,CAAD,CAAX,EAAgC,CAAhC;AAJJ;IADqB,CAAvB;EADQ;;EAQV,MAAM,CAAC,OAAP,GAAiB;IAAE,SAAA,OAAF;;AAzDjB","file":"metal/menu.js","sourceRoot":"/source/","sourcesContent":["\nMenu = require \"menu\"\n\nAppStore = require \"./stores/AppStore\"\nAppActions = require \"./actions/AppActions\"\nAppDispatcher = require \"./dispatcher/AppDispatcher\"\n\nrefresh_menu = ->\n  mac = (process.platform == \"darwin\")\n\n  menus = {\n    file: {\n      label: \"File\"\n      submenu: [\n        {\n          label: \"Close Window\"\n          accelerator: if mac then \"Command+W\" else \"Alt+F4\"\n          click: ->\n            require(\"app\").main_window?.hide()\n        }\n        {\n          label: \"Quit\"\n          accelerator: if mac then \"Command+Q\" else \"Ctrl+Q\"\n          click: ->\n            AppActions.quit()\n        }\n      ]\n    }\n\n    account: {\n      label: \"Account\"\n      submenu: [\n        {\n          label: \"Log out\"\n          click: ->\n            AppActions.logout()\n        }\n      ]\n    }\n  }\n\n  template = [menus.file]\n\n  if AppStore.get_current_user()\n    template.push menus.account\n\n  # gotcha: buildFromTemplate mutates its argument - calling it\n  # twice with the same argument throws 'Invalid menu template'\n  Menu.setApplicationMenu Menu.buildFromTemplate template\n\ninstall = ->\n  AppDispatcher.register (action) ->\n    switch action.action_type\n      # TODO: keep an eye on that, might need to rebuild in\n      # other circumstances.\n      when 'BOOT', 'LOGIN_DONE', 'LOGOUT'\n        setTimeout (-> refresh_menu()), 0\n\nmodule.exports = { install }\n\n"]}