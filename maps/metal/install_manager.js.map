{"version":3,"sources":["metal/install_manager.coffee"],"names":[],"mappings":"AACA;AAAA,MAAA;;EAAA,GAAA,GAAM,OAAA,CAAQ,KAAR;;EACN,IAAA,GAAO,OAAA,CAAQ,MAAR;;EACP,EAAA,GAAK,OAAA,CAAQ,IAAR;;EAEL,OAAA,GAAU,OAAA,CAAQ,SAAR;;EACV,QAAA,GAAW,OAAA,CAAQ,kBAAR;;EACX,OAAA,GAAU,OAAA,CAAQ,SAAR;;EACV,MAAA,GAAS,OAAA,CAAQ,QAAR;;EACT,QAAA,GAAW,OAAA,CAAQ,eAAR;;EAEX,SAAA,GAAY,OAAA,CAAQ,WAAR;;EAEZ,KAAA,GAAQ,OAAA,CAAQ,SAAR;;EACR,SAAA,GAAY,OAAA,CAAQ,aAAR;;EACZ,GAAA,GAAM,OAAA,CAAQ,OAAR;;EACN,EAAA,GAAK,OAAA,CAAQ,MAAR;;EAEL,aAAA,GAAgB,OAAA,CAAQ,4BAAR;;EAChB,YAAA,GAAe,OAAA,CAAQ,0BAAR;;EACf,UAAA,GAAa,OAAA,CAAQ,sBAAR;;EACb,QAAA,GAAW,OAAA,CAAQ,mBAAR;;EAEX,YAAA,GAAe,SAAA,CAAU;IACvB,OAAA,EAAS,IADc;IAEvB,gBAAA,EAAkB,IAFK;IAGvB,WAAA,EAAa,IAHU;IAIvB,UAAA,EAAY,IAJW;IAKvB,WAAA,EAAa,IALU;IAMvB,OAAA,EAAS,IANc;IAOvB,KAAA,EAAO,IAPgB;IAQvB,IAAA,EAAM,IARiB;GAAV;;EAWT;IACJ,UAAC,CAAA,WAAD,GAAc,IAAI,CAAC,IAAL,CAAU,GAAG,CAAC,OAAJ,CAAY,MAAZ,CAAV,EAA+B,WAA/B,EAA4C,SAA5C;;IACd,UAAC,CAAA,YAAD,GAAe,IAAI,CAAC,IAAL,CAAU,UAAC,CAAA,WAAX,EAAwB,UAAxB;;IACf,UAAC,CAAA,QAAD,GAAW,IAAI,CAAC,IAAL,CAAU,UAAC,CAAA,WAAX,EAAwB,MAAxB;;IACX,UAAC,CAAA,KAAD,GAAS;;IAEI,oBAAA,GAAA;;yBAGb,KAAA,GAAO,SAAC,IAAD;AACL,UAAA;MAAA,IAAA,GAAO;QACL,MAAA,EAAQ,UADH;QAEL,OAAA,EAAS,IAAI,CAAC,IAAI,CAAC,EAFd;QAGL,KAAA,EAAO,YAAY,CAAC,OAHf;;aAKP,EAAE,CAAC,MAAH,CAAU,IAAV,CAAe,CAAC,IAAhB,CAAqB,CAAA,SAAA,KAAA;eAAA,SAAC,MAAD;iBAAY,KAAC,CAAA,IAAD,CAAM,MAAN;QAAZ;MAAA,CAAA,CAAA,CAAA,IAAA,CAArB;IANK;;yBAQP,IAAA,GAAM,SAAC,MAAD;MACJ,IAAC,CAAA,EAAD,GAAM,MAAM,CAAC;MACb,UAAU,CAAC,KAAM,CAAA,IAAC,CAAA,EAAD,CAAjB,GAAwB;MACxB,IAAC,CAAA,OAAD,GAAW,MAAM,CAAC;MAClB,IAAC,CAAA,QAAD,GAAY;aAEZ,EAAE,CAAC,OAAH,CAAW;QAAA,MAAA,EAAQ,OAAR;QAAiB,EAAA,EAAI,IAAC,CAAA,OAAtB;OAAX,CAAyC,CAAC,IAA1C,CAA+C,CAAA,SAAA,KAAA;eAAA,SAAC,IAAD;UAC7C,KAAC,CAAA,IAAD,GAAQ,IAAA;AAAQ,kBAAU,IAAA,KAAA,CAAM,kBAAA,GAAmB,IAAC,CAAA,OAA1B;;iBAC1B,OAAO,CAAC,GAAR,CAAY,cAAA,GAAc,CAAC,IAAI,CAAC,SAAL,CAAe,KAAC,CAAA,IAAhB,CAAD,CAA1B;QAF6C;MAAA,CAAA,CAAA,CAAA,IAAA,CAA/C,CAGC,CAAC,IAHF,CAGO,CAAA,SAAA,KAAA;eAAA,SAAA;iBACL,KAAC,CAAA,QAAD,IAAa,EAAE,CAAC,OAAH,CAAW;YAAA,MAAA,EAAQ,OAAR;YAAiB,EAAA,EAAI,KAAC,CAAA,IAAI,CAAC,OAA3B;WAAX,CAA8C,CAAC,IAA/C,CAAoD,SAAC,IAAD;AAC/D,gBAAA;YAAA,OAAO,CAAC,GAAR,CAAY,cAAA,GAAc,CAAC,IAAI,CAAC,SAAL,CAAe,IAAf,CAAD,CAA1B;YACA,QAAA,GAAW,IAAI,CAAC;YAChB,IAAA,GAAO,KAAC,CAAA,IAAI,CAAC,GAAG,CAAC,KAAV,CAAgB,SAAhB;mBACP,KAAC,CAAA,QAAD,GAAY,IAAI,CAAC,IAAL,CAAU,UAAU,CAAC,QAArB,EAAkC,IAAD,GAAM,MAAN,GAAY,QAA7C;UAJmD,CAApD;QADR;MAAA,CAAA,CAAA,CAAA,IAAA,CAHP,CAUC,CAAC,IAVF,CAUO,CAAA,SAAA,KAAA;eAAA,SAAA;UACL,KAAC,CAAA,SAAD,CAAW,MAAM,CAAC,KAAlB;UACA,OAAO,CAAC,GAAR,CAAY,iBAAA,GAAkB,KAAC,CAAA,EAAnB,GAAsB,cAAtB,GAAoC,KAAC,CAAA,KAAjD;AAEA,kBAAO,KAAC,CAAA,KAAR;AAAA,iBACO,YAAY,CAAC,OADpB;qBAEI,KAAA,CAAM,SAAA;uBAAG,KAAC,CAAA,KAAD,CAAA;cAAH,CAAN;AAFJ;QAJK;MAAA,CAAA,CAAA,CAAA,IAAA,CAVP;IANI;;yBAyBN,SAAA,GAAW,SAAC,KAAD;MACT,OAAO,CAAC,GAAR,CAAY,UAAA,GAAW,IAAC,CAAA,EAAZ,GAAe,KAAf,GAAoB,IAAC,CAAA,KAArB,GAA2B,MAA3B,GAAiC,KAAjC,GAAuC,GAAnD;MACA,IAAC,CAAA,KAAD,GAAS;aACT,IAAC,CAAA,WAAD,CAAA;IAHS;;yBAKX,WAAA,GAAa,SAAA;aACX,KAAA,CAAM,CAAA,SAAA,KAAA;eAAA,SAAA;iBAAG,UAAU,CAAC,gBAAX,CAA4B,KAA5B;QAAH;MAAA,CAAA,CAAA,CAAA,IAAA,CAAN;IADW;;yBAGb,KAAA,GAAO,SAAA;aACL,IAAC,CAAA,kBAAD,CAAA;IADK;;yBAGP,kBAAA,GAAoB,SAAA;AAClB,UAAA;MAAA,IAAC,CAAA,SAAD,CAAW,YAAY,CAAC,gBAAxB;MAEA,MAAA,GAAS,QAAQ,CAAC,gBAAT,CAAA;aAET,EAAE,CAAC,OAAH,CAAW;QAAA,MAAA,EAAQ,eAAR;QAAyB,OAAA,EAAS,IAAC,CAAA,IAAI,CAAC,EAAxC;OAAX,CAAsD,CAAC,IAAvD,CAA4D,CAAA,SAAA,KAAA;eAAA,SAAC,GAAD;UAC1D,OAAO,CAAC,GAAR,CAAY,iCAAA,GAAkC,KAAC,CAAA,IAAI,CAAC,EAAxC,GAA2C,QAA3C,GAAkD,CAAC,IAAI,CAAC,SAAL,CAAe,GAAf,CAAD,CAA9D;UACA,IAAG,GAAH;YACE,KAAC,CAAA,GAAD,GAAO;mBACP,MAAM,CAAC,oBAAP,CAA4B,KAAC,CAAA,GAAG,CAAC,EAAjC,EAFF;WAAA,MAAA;mBAIE,MAAM,CAAC,YAAP,CAAoB,KAAC,CAAA,IAAI,CAAC,EAA1B,EAJF;;QAF0D;MAAA,CAAA,CAAA,CAAA,IAAA,CAA5D,CAOC,CAAC,IAPF,CAOO,CAAA,SAAA,KAAA;eAAA,SAAC,GAAD;AACL,cAAA;UAAE,UAAY,IAAZ;UAGF,IAAA;AAAO,oBAAO,OAAO,CAAC,QAAf;AAAA,mBACA,QADA;uBACc;AADd,mBAEA,OAFA;uBAEa;AAFb,mBAGA,OAHA;uBAGa;AAHb;;UAKP,mBAAA,GAAsB,OAAO,CAAC,MAAR,CAAe,SAAC,MAAD;mBAAY,CAAC,CAAC,MAAO,CAAA,IAAA;UAArB,CAAf;UAEtB,cAAA,GAAiB,mBAAmB,CAAC,GAApB,CAAwB,SAAC,MAAD;AACvC,gBAAA;YAAA,KAAA,GAAQ;YACR,QAAA,GAAW,MAAM,CAAC,QAAQ,CAAC,WAAhB,CAAA;YAEX,IAAG,QAAQ,CAAC,IAAT,CAAc,QAAd,CAAH;cACE,KAAA,IAAS,GADX;;YAGA,IAAG,YAAY,CAAC,IAAb,CAAkB,QAAlB,CAAH;cACE,KAAA,IAAS,IADX;;mBAGA,MAAM,CAAC,KAAP,CAAa;cAAE,OAAA,KAAF;aAAb;UAVuC,CAAxB;UAYjB,cAAA,GAAiB,cAAc,CAAC,IAAf,CAAoB,SAAC,CAAD,EAAI,CAAJ;mBAAU,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC;UAAtB,CAApB;UAEjB,OAAO,CAAC,GAAR,CAAY,kBAAA,GAAkB,CAAC,IAAI,CAAC,SAAL,CAAe,cAAf,CAAD,CAA9B;UAEA,IAAG,cAAc,CAAC,MAAlB;mBAEE,KAAC,CAAA,UAAD,CAAY,cAAe,CAAA,CAAA,CAA3B,EAFF;WAAA,MAAA;YAIE,KAAC,CAAA,SAAD,CAAW,YAAY,CAAC,KAAxB;mBACA,UAAU,CAAC,MAAX,CAAkB,uBAAA,GAAwB,KAAC,CAAA,IAAI,CAAC,KAAhD,EALF;;QA3BK;MAAA,CAAA,CAAA,CAAA,IAAA,CAPP;IALkB;;yBA8CpB,UAAA,GAAY,SAAC,OAAD;AACV,UAAA;MADW,IAAC,CAAA,SAAD;MACX,OAAO,CAAC,GAAR,CAAY,uBAAA,GAAwB,IAAC,CAAA,MAAM,CAAC,QAA5C;MAEA,GAAA,GAAM,SAAS,CAAC,GAAV,CAAc,IAAC,CAAA,MAAM,CAAC,QAAtB;MACN,YAAA,GAAe,SAAA,GAAU,IAAC,CAAA,MAAM,CAAC,EAAlB,GAAuB;MACtC,IAAC,CAAA,YAAD,GAAgB,IAAI,CAAC,IAAL,CAAU,UAAU,CAAC,YAArB,EAAmC,YAAnC;aAChB,IAAC,CAAA,OAAD,CAAA;IANU;;yBAQZ,OAAA,GAAS,SAAA;AACP,UAAA;MAAA,IAAC,CAAA,SAAD,CAAW,YAAY,CAAC,WAAxB;MAEA,MAAA,GAAS,QAAQ,CAAC,gBAAT,CAAA;aAET,CACK,IAAC,CAAA,GAAJ,GACE,MAAM,CAAC,wBAAP,CAAgC,IAAC,CAAA,GAAG,CAAC,EAArC,EAAyC,IAAC,CAAA,MAAM,CAAC,EAAjD,CADF,GAGE,MAAM,CAAC,eAAP,CAAuB,IAAC,CAAA,MAAM,CAAC,EAA/B,CAJJ,CAKC,CAAC,IALF,CAKO,CAAA,SAAA,KAAA;eAAA,SAAC,GAAD;UACL,KAAC,CAAA,GAAD,GAAO,GAAG,CAAC;iBACX,KAAA,CAAM,SAAA;mBAAG,KAAC,CAAA,QAAD,CAAA;UAAH,CAAN;QAFK;MAAA,CAAA,CAAA,CAAA,IAAA,CALP;IALO;;yBAcT,QAAA,GAAU,SAAA;AACR,UAAA;MAAA,IAAC,CAAA,SAAD,CAAW,YAAY,CAAC,WAAxB;MAEA,OAAA,GAAU;MACV,KAAA,GAAQ;MAER,IAAG,IAAC,CAAA,UAAJ;QACE,OAAQ,CAAA,OAAA,CAAR,GAAmB,QAAA,GAAS,IAAC,CAAA,UAAV,GAAqB;QACxC,KAAA,GAAQ,IAFV;OAAA,MAGK,IAAG,EAAE,CAAC,UAAH,CAAc,IAAC,CAAA,YAAf,CAAH;QACH,OAAO,CAAC,GAAR,CAAY,2BAAA,GAA4B,IAAC,CAAA,YAA7B,GAA0C,iBAAtD;QACA,OAAO,CAAC,IAAR,CAAa,IAAC,CAAA,GAAd,CAAkB,CAAC,EAAnB,CAAsB,UAAtB,EAAkC,CAAA,SAAA,KAAA;iBAAA,SAAC,QAAD;AAChC,gBAAA;YAAA,cAAA,GAAiB,QAAQ,CAAC,OAAQ,CAAA,gBAAA;YAClC,KAAA,GAAQ,EAAE,CAAC,SAAH,CAAa,KAAC,CAAA,YAAd;YACR,OAAO,CAAC,GAAR,CAAc,CAAC,QAAQ,CAAC,QAAT,CAAkB,cAAlB,CAAD,CAAA,GAAkC,qBAAhD;YACA,OAAO,CAAC,GAAR,CAAc,CAAC,QAAQ,CAAC,QAAT,CAAkB,KAAK,CAAC,IAAxB,CAAD,CAAA,GAA8B,oBAA5C;YACA,IAAA,GAAO,cAAA,GAAiB,KAAK,CAAC;YAE9B,IAAG,IAAA,GAAO,CAAV;cACE,OAAO,CAAC,GAAR,CAAY,4BAAA,GAA4B,CAAC,QAAQ,CAAC,QAAT,CAAkB,IAAlB,CAAD,CAA5B,GAAqD,SAAjE;cACA,KAAC,CAAA,UAAD,GAAc,KAAK,CAAC;qBACpB,KAAC,CAAA,OAAD,CAAA,EAHF;aAAA,MAAA;cAKE,OAAO,CAAC,GAAR,CAAY,WAAZ;qBACA,KAAC,CAAA,OAAD,CAAA,EANF;;UAPgC;QAAA,CAAA,CAAA,CAAA,IAAA,CAAlC;AAeA,eAjBG;;MAmBL,OAAO,CAAC,GAAR,CAAY,2BAAA,GAA2B,CAAC,IAAI,CAAC,SAAL,CAAe,OAAf,CAAD,CAA3B,GAAmD,YAAnD,GAA+D,KAA3E;MACA,CAAA,GAAI,QAAA,CAAS,OAAO,CAAC,GAAR,CAAY;QACvB,QAAA,EAAU,IADa;QAEvB,GAAA,EAAK,IAAC,CAAA,GAFiB;QAGvB,SAAA,OAHuB;OAAZ,CAAT,EAIA;QAAA,QAAA,EAAU,EAAV;OAJA;MAKJ,CAAC,CAAC,EAAF,CAAK,UAAL,EAAiB,CAAA,SAAA,KAAA;eAAA,SAAC,QAAD;AACf,cAAA;UAAA,OAAO,CAAC,GAAR,CAAY,mBAAA,GAAoB,QAAQ,CAAC,UAAzC;UACA,cAAA,GAAiB,QAAQ,CAAC,OAAQ,CAAA,gBAAA;iBAClC,OAAO,CAAC,GAAR,CAAY,cAAA,GAAc,CAAC,QAAQ,CAAC,QAAT,CAAkB,cAAlB,CAAD,CAAd,GAAgD,OAAhD,GAAuD,KAAC,CAAA,IAAI,CAAC,KAAzE;QAHe;MAAA,CAAA,CAAA,CAAA,IAAA,CAAjB;MAKA,CAAC,CAAC,EAAF,CAAK,OAAL,EAAc,CAAA,SAAA,KAAA;eAAA,SAAC,GAAD;iBACZ,OAAO,CAAC,GAAR,CAAY,kBAAA,GAAkB,CAAC,IAAI,CAAC,SAAL,CAAe,GAAf,CAAD,CAA9B;QADY;MAAA,CAAA,CAAA,CAAA,IAAA,CAAd;MAGA,CAAC,CAAC,EAAF,CAAK,UAAL,EAAiB,CAAA,SAAA,KAAA;eAAA,SAAC,KAAD;UACf,KAAC,CAAA,QAAD,GAAY,IAAA,GAAO,KAAK,CAAC;iBACzB,KAAC,CAAA,WAAD,CAAA;QAFe;MAAA,CAAA,CAAA,CAAA,IAAA,CAAjB;MAIA,MAAM,CAAC,IAAP,CAAY,IAAI,CAAC,OAAL,CAAa,IAAC,CAAA,YAAd,CAAZ;MACA,GAAA,GAAM,EAAE,CAAC,iBAAH,CAAqB,IAAC,CAAA,YAAtB,EAAoC;QACxC,OAAA,KADwC;QAExC,eAAA,EAAiB,QAFuB;OAApC;aAIN,CAAC,CAAC,IAAF,CAAO,GAAP,CAAW,CAAC,EAAZ,CAAe,OAAf,EAAwB,CAAA,SAAA,KAAA;eAAA,SAAA;UACtB,KAAC,CAAA,QAAD,GAAY;UACZ,KAAC,CAAA,WAAD,CAAA;UAEA,UAAU,CAAC,MAAX,CAAA;UACA,UAAU,CAAC,MAAX,CAAqB,KAAC,CAAA,IAAI,CAAC,KAAP,GAAa,wBAAjC;iBACA,KAAC,CAAA,OAAD,CAAA;QANsB;MAAA,CAAA,CAAA,CAAA,IAAA,CAAxB;IAnDQ;;yBA2DV,OAAA,GAAS,SAAA;MACP,IAAC,CAAA,SAAD,CAAW,YAAY,CAAC,UAAxB;aAEA,OAAA,CAAQ,aAAR,CAAsB,CAAC,OAAvB,CAA+B,IAAC,CAAA,YAAhC,EAA8C,IAAC,CAAA,QAA/C,CAAwD,CAAC,QAAzD,CAAkE,CAAA,SAAA,KAAA;eAAA,SAAC,KAAD;UAChE,OAAO,CAAC,GAAR,CAAY,qBAAA,GAAsB,KAAK,CAAC,OAAxC;UACA,KAAC,CAAA,QAAD,GAAY,IAAA,GAAO,KAAK,CAAC;iBACzB,KAAC,CAAA,WAAD,CAAA;QAHgE;MAAA,CAAA,CAAA,CAAA,IAAA,CAAlE,CAIC,CAAC,IAJF,CAIO,CAAA,SAAA,KAAA;eAAA,SAAC,GAAD;UACL,KAAC,CAAA,QAAD,GAAY;UACZ,KAAC,CAAA,WAAD,CAAA;UACA,OAAO,CAAC,GAAR,CAAY,YAAA,GAAa,GAAG,CAAC,UAAjB,GAA4B,cAAxC;iBACA,KAAC,CAAA,SAAD,CAAW,YAAY,CAAC,IAAxB;QAJK;MAAA,CAAA,CAAA,CAAA,IAAA,CAJP,CAUC,CAAC,OAAD,CAVD,CAUQ,CAAA,SAAA,KAAA;eAAA,SAAC,CAAD;UACN,KAAC,CAAA,SAAD,CAAW,YAAY,CAAC,KAAxB;UACA,OAAO,CAAC,GAAR,CAAY,CAAZ;iBACA,UAAU,CAAC,MAAX,CAAkB,oBAAA,GAAqB,KAAC,CAAA,IAAI,CAAC,KAA7C;QAHM;MAAA,CAAA,CAAA,CAAA,IAAA,CAVR;IAHO;;yBAkBT,SAAA,GAAW,SAAA;MACT,IAAC,CAAA,SAAD,CAAW,YAAY,CAAC,WAAxB;aACA,OAAA,CAAQ,gBAAR,CAAyB,CAAC,SAA1B,CAAoC,IAAC,CAAA,QAArC,CAA8C,CAAC,IAA/C,CAAoD,CAAA,SAAA,KAAA;eAAA,SAAC,GAAD;UAClD,KAAC,CAAA,WAAD,GAAe,GAAG,CAAC;UACnB,IAAG,KAAC,CAAA,WAAW,CAAC,MAAb,GAAsB,CAAzB;YACE,OAAO,CAAC,GAAR,CAAY,0BAAZ;mBACA,KAAA,CAAM,SAAA;qBAAG,KAAC,CAAA,MAAD,CAAA;YAAH,CAAN,EAFF;WAAA,MAAA;YAIE,KAAC,CAAA,SAAD,CAAW,YAAY,CAAC,KAAxB;YACA,OAAO,CAAC,GAAR,CAAY,sBAAZ;mBACA,UAAU,CAAC,MAAX,CAAkB,sBAAA,GAAuB,KAAC,CAAA,IAAI,CAAC,KAA/C,EANF;;QAFkD;MAAA,CAAA,CAAA,CAAA,IAAA,CAApD;IAFS;;yBAaX,MAAA,GAAQ,SAAA;AACN,UAAA;MAAA,IAAC,CAAA,SAAD,CAAW,YAAY,CAAC,OAAxB;MACA,OAAO,CAAC,GAAR,CAAY,YAAA,GAAa,IAAC,CAAA,IAAI,CAAC,KAAnB,GAAyB,IAAzB,GAA6B,IAAC,CAAA,WAAW,CAAC,MAA1C,GAAiD,YAA7D;MAGA,UAAA;;AAAa;AAAA;aAAA,qCAAA;;UACX,SAAA,GAAY,IAAI,CAAC,SAAL,CAAe,SAAf;uBACZ;YACE,WAAA,SADF;YAEE,KAAA,EAAO,SAAS,CAAC,KAAV,CAAgB,IAAI,CAAC,GAArB,CAAyB,CAAC,MAFnC;;AAFW;;;MAOb,UAAU,CAAC,IAAX,CAAgB,SAAC,CAAD,EAAI,CAAJ;eAAU,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC;MAAtB,CAAhB;MAEA,OAAO,CAAC,GAAR,CAAY,WAAA,GAAY,UAAW,CAAA,CAAA,CAAE,CAAC,SAA1B,GAAoC,uBAApC,GAA0D,CAAC,IAAI,CAAC,SAAL,CAAe,UAAf,CAAD,CAAtE;aAEA,OAAA,CAAQ,YAAR,CAAqB,CAAC,MAAtB,CAA6B,UAAW,CAAA,CAAA,CAAE,CAAC,SAA3C,CAAqD,CAAC,IAAtD,CAA2D,CAAA,SAAA,KAAA;eAAA,SAAC,GAAD;UACzD,OAAO,CAAC,GAAR,CAAY,GAAZ;iBACA,UAAU,CAAC,MAAX,CAAkB,GAAlB;QAFyD;MAAA,CAAA,CAAA,CAAA,IAAA,CAA3D,CAGC,CAAC,OAAD,CAHD,CAGQ,CAAA,SAAA,KAAA;eAAA,SAAC,CAAD;AACN,cAAA;UAAA,GAAA,GAAS,KAAC,CAAA,IAAI,CAAC,KAAP,GAAa,qBAAb,GAAkC,CAAC,CAAC;UAC5C,OAAO,CAAC,GAAR,CAAY,GAAZ;UACA,OAAO,CAAC,GAAR,CAAY,sBAAA,GAAuB,CAAC,CAAC,QAArC;iBACA,UAAU,CAAC,MAAX,CAAkB,GAAlB;QAJM;MAAA,CAAA,CAAA,CAAA,IAAA,CAHR,CAQC,CAAC,SAAD,CARD,CAQU,CAAA,SAAA,KAAA;eAAA,SAAA;iBACR,KAAC,CAAA,SAAD,CAAW,YAAY,CAAC,IAAxB;QADQ;MAAA,CAAA,CAAA,CAAA,IAAA,CARV;IAhBM;;;;;;EA4BV,OAAA,GAAU,SAAA;WACR,aAAa,CAAC,QAAd,CAAuB,SAAC,MAAD;AACrB,cAAO,MAAM,CAAC,WAAd;AAAA,aACO,YAAY,CAAC,cADpB;iBAEI,EAAE,CAAC,OAAH,CAAW;YAAA,MAAA,EAAQ,UAAR;YAAoB,OAAA,EAAS,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAA9C;WAAX,CAA4D,CAAC,IAA7D,CAAkE,CAAA,SAAA,KAAA;mBAAA,SAAC,MAAD;cAChE,IAAG,MAAH;gBACE,OAAA,GAAU,UAAU,CAAC,KAAM,CAAA,MAAM,CAAC,GAAP;uBAC3B,OAAO,CAAC,SAAR,CAAA,EAFF;eAAA,MAAA;gBAIE,OAAA,GAAc,IAAA,UAAA,CAAA;uBACd,OAAO,CAAC,KAAR,CAAc,MAAM,CAAC,IAArB,EALF;;YADgE;UAAA,CAAA,CAAA,CAAA,IAAA,CAAlE;AAFJ,aAWO,YAAY,CAAC,UAXpB;iBAaI,EAAE,CAAC,IAAH,CAAQ;YAAA,MAAA,EAAQ,UAAR;WAAR,CAA2B,CAAC,IAA5B,CAAiC,SAAC,OAAD;AAC/B,gBAAA;AAAA;iBAAA,yCAAA;;cACE,OAAA,GAAc,IAAA,UAAA,CAAA;2BACd,OAAO,CAAC,IAAR,CAAa,MAAb;AAFF;;UAD+B,CAAjC;AAbJ;IADqB,CAAvB;EADQ;;EAqBV,MAAM,CAAC,OAAP,GAAiB;IAAE,SAAA,OAAF;;AArSjB","file":"metal/install_manager.js","sourceRoot":"/source/","sourcesContent":["\napp = require \"app\"\npath = require \"path\"\nfs = require \"fs\"\n\nrequest = require \"request\"\nprogress = require \"request-progress\"\nfstream = require \"fstream\"\nmkdirp = require \"mkdirp\"\nHumanize = require \"humanize-plus\"\n\nkeyMirror = require \"keymirror\"\n\ndefer = require \"./defer\"\nfileutils = require \"./fileutils\"\napi = require \"./api\"\ndb = require \"./db\"\n\nAppDispatcher = require \"./dispatcher/AppDispatcher\"\nAppConstants = require \"./constants/AppConstants\"\nAppActions = require \"./actions/AppActions\"\nAppStore = require \"./stores/AppStore\"\n\nInstallState = keyMirror {\n  PENDING: null\n  SEARCHING_UPLOAD: null\n  DOWNLOADING: null\n  EXTRACTING: null\n  CONFIGURING: null\n  RUNNING: null\n  ERROR: null\n  IDLE: null\n}\n\nclass AppInstall\n  @library_dir: path.join(app.getPath(\"home\"), \"Downloads\", \"itch.io\")\n  @archives_dir: path.join(@library_dir, \"archives\")\n  @apps_dir: path.join(@library_dir, \"apps\")\n  @by_id = {}\n\n  constructor: ->\n    # muffin\n\n  setup: (opts) ->\n    data = {\n      _table: 'installs'\n      game_id: opts.game.id\n      state: InstallState.PENDING\n    }\n    db.insert(data).then (record) => @load(record)\n\n  load: (record) ->\n    @id = record._id\n    AppInstall.by_id[@id] = @\n    @game_id = record.game_id\n    @progress = 0\n\n    db.findOne(_table: 'games', id: @game_id).then((game) =>\n      @game = game or throw new Error \"game not found: #{@game_id}\"\n      console.log \"found game: #{JSON.stringify @game}\"\n    ).then(=>\n      @app_path or db.findOne(_table: 'users', id: @game.user_id).then((user) =>\n        console.log \"found user: #{JSON.stringify user}\"\n        username = user.username\n        slug = @game.url.match /[^\\/]+$/\n        @app_path = path.join(AppInstall.apps_dir, \"#{slug}-by-#{username}\")\n      )\n    ).then(=>\n      @set_state record.state\n      console.log \"Loaded install #{@id} with state #{@state}\"\n\n      switch @state\n        when InstallState.PENDING\n          defer => @start()\n    )\n\n  set_state: (state) ->\n    console.log \"Install #{@id}, [#{@state} -> #{state}]\"\n    @state = state\n    @emit_change()\n\n  emit_change: ->\n    defer => AppActions.install_progress @\n\n  start: ->\n    @search_for_uploads()\n\n  search_for_uploads: ->\n    @set_state InstallState.SEARCHING_UPLOAD\n\n    client = AppStore.get_current_user()\n\n    db.findOne(_table: 'download_keys', game_id: @game.id).then((key) =>\n      console.log \"tried to find download key for #{@game.id}, got #{JSON.stringify key}\"\n      if key\n        @key = key\n        client.download_key_uploads @key.id\n      else\n        client.game_uploads @game.id\n    ).then (res) =>\n      { uploads } = res\n\n      # filter uploads to find one relevant to our current platform\n      prop = switch process.platform\n        when \"darwin\" then \"p_osx\"\n        when \"win32\" then \"p_windows\"\n        when \"linux\" then \"p_linux\"\n\n      interesting_uploads = uploads.filter (upload) -> !!upload[prop]\n\n      scored_uploads = interesting_uploads.map (upload) ->\n        score = 0\n        filename = upload.filename.toLowerCase()\n\n        if /\\.zip$/.test filename\n          score += 10\n\n        if /soundtrack/.test filename\n          score -= 100\n\n        upload.merge { score }\n\n      scored_uploads = scored_uploads.sort (a, b) -> b.score - a.score\n\n      console.log \"Scored uploads\\n#{JSON.stringify(scored_uploads)}\"\n\n      if scored_uploads.length\n        # TODO let user choose\n        @set_upload scored_uploads[0]\n      else\n        @set_state InstallState.ERROR\n        AppActions.notify \"No uploads found for #{@game.title}\"\n\n  set_upload: (@upload) ->\n    console.log \"Choosing to download #{@upload.filename}\"\n\n    ext = fileutils.ext @upload.filename\n    archive_name = \"upload-#{@upload.id}#{ext}\"\n    @archive_path = path.join(AppInstall.archives_dir, archive_name)\n    @get_url()\n\n  get_url: ->\n    @set_state InstallState.DOWNLOADING\n\n    client = AppStore.get_current_user()\n\n    (\n      if @key\n        client.download_upload_with_key @key.id, @upload.id\n      else\n        client.download_upload @upload.id\n    ).then (res) =>\n      @url = res.url\n      defer => @download()\n\n  download: ->\n    @set_state InstallState.DOWNLOADING\n\n    headers = {}\n    flags = 'w'\n\n    if @local_size\n      headers['Range'] = \"bytes=#{@local_size}-\"\n      flags = 'a'\n    else if fs.existsSync(@archive_path)\n      console.log \"Have existing archive at #{@archive_path}, checking size\"\n      request.head(@url).on 'response', (response) =>\n        content_length = response.headers['content-length']\n        stats = fs.lstatSync @archive_path\n        console.log \"#{Humanize.fileSize content_length} (remote file size)\"\n        console.log \"#{Humanize.fileSize stats.size} (local file size)\"\n        diff = content_length - stats.size\n\n        if diff > 0\n          console.log \"Should download remaining #{Humanize.fileSize(diff)} bytes.\"\n          @local_size = stats.size\n          @get_url()\n        else\n          console.log \"All good.\"\n          @extract()\n\n      return\n\n    console.log \"Downloading with headers #{JSON.stringify headers}, flags = #{flags}\"\n    r = progress request.get({\n      encoding: null # binary (otherwise defaults to utf-8)\n      url: @url\n      headers\n    }), throttle: 25\n    r.on 'response', (response) =>\n      console.log \"Got status code: #{response.statusCode}\"\n      content_length = response.headers['content-length']\n      console.log \"Downloading #{Humanize.fileSize content_length} for #{@game.title}\"\n\n    r.on 'error', (err) =>\n      console.log \"Download error: #{JSON.stringify err}\"\n\n    r.on 'progress', (state) =>\n      @progress = 0.01 * state.percent\n      @emit_change()\n\n    mkdirp.sync(path.dirname(@archive_path))\n    dst = fs.createWriteStream(@archive_path, {\n      flags\n      defaultEncoding: \"binary\"\n    })\n    r.pipe(dst).on 'close', =>\n      @progress = 0\n      @emit_change()\n\n      AppActions.bounce()\n      AppActions.notify \"#{@game.title} finished downloading.\"\n      @extract()\n\n  extract: ->\n    @set_state InstallState.EXTRACTING\n\n    require(\"./extractor\").extract(@archive_path, @app_path).progress((state) =>\n      console.log \"Progress callback! #{state.percent}\"\n      @progress = 0.01 * state.percent\n      @emit_change()\n    ).then((res) =>\n      @progress = 0\n      @emit_change()\n      console.log \"Extracted #{res.total_size} bytes total\"\n      @set_state InstallState.IDLE\n      # defer => @configure()\n    ).catch (e) =>\n      @set_state InstallState.ERROR\n      console.log e\n      AppActions.notify \"Failed to extract #{@game.title}\"\n\n  configure: ->\n    @set_state InstallState.CONFIGURING\n    require(\"./configurator\").configure(@app_path).then((res) =>\n      @executables = res.executables\n      if @executables.length > 0\n        console.log \"Configuration successful\"\n        defer => @launch()\n      else\n        @set_state InstallState.ERROR\n        console.log \"No executables found\"\n        AppActions.notify \"Failed to configure #{@game.title}\"\n    )\n\n  launch: ->\n    @set_state InstallState.RUNNING\n    console.log \"Launching #{@game.title}, #{@executables.length} available\"\n\n    # try to launch top-most executable\n    candidates = for orig_path in @executables\n      exec_path = path.normalize orig_path\n      {\n        exec_path\n        depth: exec_path.split(path.sep).length\n      }\n\n    candidates.sort (a, b) -> a.depth - b.depth\n\n    console.log \"choosing #{candidates[0].exec_path} out of candidates\\n #{JSON.stringify candidates}\"\n\n    require(\"./launcher\").launch(candidates[0].exec_path).then((res) =>\n      console.log res\n      AppActions.notify res\n    ).catch((e) =>\n      msg = \"#{@game.title} crashed with code #{e.code}\"\n      console.log msg\n      console.log \"...executable path: #{e.exe_path}\"\n      AppActions.notify msg\n    ).finally(=>\n      @set_state InstallState.IDLE\n    )\n\ninstall = ->\n  AppDispatcher.register (action) ->\n    switch action.action_type\n      when AppConstants.DOWNLOAD_QUEUE\n        db.findOne(_table: 'installs', game_id: action.opts.game.id).then((record) =>\n          if record\n            install = AppInstall.by_id[record._id]\n            install.configure()\n          else\n            install = new AppInstall()\n            install.setup(action.opts)\n        )\n\n      when AppConstants.LOGIN_DONE\n        # load existing installs\n        db.find(_table: 'installs').then((records) ->\n          for record in records\n            install = new AppInstall()\n            install.load(record)\n        )\n\nmodule.exports = { install }\n\n"]}